pipeline {
    agent any
    
    environment {
        myuser = credentials ('dockerhub-user')
        mypassword = credentials ('dockerhub-password')

        POSTGRES_HOST = credentials ('POSTGRES_HOST')
        POSTGRES_PASSWORD = credentials ('POSTGRES_PASSWORD')
        AWS_ACCESS_NAME = credentials ('AWS_ACCESS_NAME')
        AWS_KEY_NAME = credentials ('AWS_KEY_NAME')
        version = "v3"
        keyfile = credentials ('keyfile')

    }
    
    stages {
       stage ("download code") {
         steps {
            sh '''
            git clone https://github.com/mzmarci/HR_APP.git
           
            '''
         }
       }
    
       stage ("build image") {
         steps {
            sh '''
                  cd HR_APP
                  docker build -t mzmarci/hrapp:$version .
               '''   
         }
       }
    
       stage ("publish image") {
         steps {
            sh '''
                  docker login -u $myuser -p $mypassword
                  docker push mzmarci/hrapp:$version
                '''
         }
       }       
    
       stage ("ls") {
         steps {
            sh '''
               ls
                # docker run --name hrapp  --rm -d -p 5000:5000 mzmarci/hrapp:$version
               '''
         }
       }
           
    
       stage ("test run ansible") {
         steps {
            sh '''
                 cd HR_APP
                 cd Ansible
                 pwd

                 echo -n $AWS_KEY_NAME | base64 >marci
                 cat marci
                 
                 ls
                 echo ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory --key-file $keyfile
                  playbook.yml 
                 -e AWS_KEY_NAME=$AWS_KEY_NAME 
                 -e AWS_ACCESS_NAME=$AWS_ACCESS_NAME
                 -e POSTGRES_HOST=$POSTGRES_HOST
                 -e POSTGRES_PASSWORD =$POSTGRES_PASSWORD
                  -u ec2-user 
  
               '''
               //#ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory  --key-file $keyfile  -e POSTGRES_HOST=$POSTGRES_HOST   -e POSTGRES_PASSWORD =$POSTGRES_PASSWORD  -e AWS_ACCESS_NAME= $AWS_ACCESS_NAME  -e AWS_KEY_NAME= $AWS_KEY_NAME  playbook.yml ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory --key-file $keyfile playbookA.yml
         }
       }


       stage ("run ansible") {
         steps {
            sh '''
                 cd HR_APP
                 cd Ansible
                 pwd

                 echo -n $AWS_KEY_NAME | base64 >marci
                 cat marci

                 ls
                 echo ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory --key-file $keyfile
                  playbook.yml 
                 -e AWS_KEY_NAME=$AWS_KEY_NAME 
                 -e AWS_ACCESS_NAME=$AWS_ACCESS_NAME
                 -e POSTGRES_HOST=$POSTGRES_HOST
                 -e POSTGRES_PASSWORD =$POSTGRES_PASSWORD
                  -u ec2-user 

                 ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory --key-file $keyfile
                  playbook.yml 
                 -e AWS_KEY_NAME=$AWS_KEY_NAME 
                 -e AWS_ACCESS_NAME=$AWS_ACCESS_NAME
                 -e POSTGRES_HOST=$POSTGRES_HOST
                 -e POSTGRES_PASSWORD =$POSTGRES_PASSWORD
                  -u ec2-user -vvv

                 
               '''
               //#ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory  --key-file $keyfile  -e POSTGRES_HOST=$POSTGRES_HOST   -e POSTGRES_PASSWORD =$POSTGRES_PASSWORD  -e AWS_ACCESS_NAME= $AWS_ACCESS_NAME  -e AWS_KEY_NAME= $AWS_KEY_NAME  playbook.yml ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -i inventory --key-file $keyfile playbookA.yml
         }
       }
    }

    post {
        always {
            deleteDir()
        }
    }
}